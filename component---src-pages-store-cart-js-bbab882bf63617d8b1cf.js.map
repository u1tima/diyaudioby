{"version":3,"sources":["webpack:///./src/components/Product/Product.module.css","webpack:///./src/components/Product/Product.js","webpack:///./src/components/Cart/Cart.js","webpack:///./src/pages/store/cart.js"],"names":["module","exports","connect","dispatch","onRefreshCart","comp","refreshCart","onDeleteFromCart","deleteFromCart","minOrder","sellPrice","initialState","orderQnt","unitPrice","totalPrice","useState","state","setState","getPrice","forEach","item","qnt","partNumber","manufacture","name","Icon","icon","size","className","css","price","map","index","key","row","onClick","qntClick","toFixed","control","InputNumber","step","value","onChange","onBlur","event","target","Math","ceil","IconButton","color","cart","total","reduce","acc","val","style","id","side"],"mappings":"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","file":"component---src-pages-store-cart-js-bbab882bf63617d8b1cf.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"price\":\"Product-module--price--3ntmT\",\"row\":\"Product-module--row--XriqV\",\"asmQnt\":\"Product-module--asmQnt--2a0j-\",\"item\":\"Product-module--item--3BGKZ\",\"control\":\"Product-module--control--KPap4\",\"buttons\":\"Product-module--buttons--2zPbr\"};","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Icon, IconButton, InputNumber } from 'rsuite';\r\nimport { refreshCart, deleteFromCart } from '../../store/cart/actions';\r\nimport css from './Product.module.css';\r\n\r\nconst Product = ({ comp, onDeleteFromCart, onRefreshCart }) => {\r\n\r\n  const { minOrder, sellPrice, orderQnt, unitPrice, totalPrice } = comp;\r\n\r\n  const initialState = {\r\n    orderQnt,\r\n    unitPrice,\r\n    totalPrice,\r\n  }\r\n\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const getPrice = (orderQnt) => {\r\n    if (orderQnt <= 0) return 0;\r\n    let unitPrice = sellPrice[0].unitPrice;\r\n    sellPrice.forEach(item => {\r\n      if (orderQnt >= item.qnt) unitPrice = item.unitPrice;\r\n    });\r\n    return unitPrice;\r\n  }\r\n\r\n  const qntClick = (index) => {\r\n    const orderQnt = sellPrice[index].qnt;\r\n    const unitPrice = sellPrice[index].unitPrice;\r\n    const totalPrice = orderQnt * unitPrice;\r\n    setState(state => ({ ...state, orderQnt, unitPrice, totalPrice }))\r\n    onRefreshCart({ ...comp, orderQnt, unitPrice, totalPrice });\r\n  }\r\n\r\n  const onChangeHandler = (value) => {\r\n    const orderQnt = (+value <= 0) ? 0 : +value\r\n    const unitPrice = getPrice(orderQnt);\r\n    const totalPrice = orderQnt * unitPrice;\r\n    setState(state => ({ ...state, orderQnt, unitPrice, totalPrice }));\r\n    onRefreshCart({ ...comp, orderQnt, unitPrice, totalPrice });\r\n  }\r\n\r\n  const onBlurHandler = (event) => {\r\n    const value = +event.target.value;\r\n    const orderQnt = Math.ceil(value / minOrder) * minOrder;\r\n    const unitPrice = getPrice(orderQnt);\r\n    const totalPrice = orderQnt * unitPrice;\r\n    setState(state => ({ ...state, orderQnt, unitPrice, totalPrice }));\r\n    onRefreshCart({ ...comp, orderQnt, unitPrice, totalPrice });\r\n  }\r\n\r\n  return (\r\n\r\n    <tr>\r\n\r\n      <td>\r\n        <div>{comp.partNumber}</div>\r\n        <div>{comp.manufacture.name}</div>\r\n      </td>\r\n\r\n      <td><Icon icon=\"cog\" size=\"lg\" /></td>\r\n\r\n      <td className={css.price}>\r\n        {sellPrice.map((item, index) => (\r\n          <div key={index} className={css.row}>\r\n            <div className={css.item} onClick={() => qntClick(index)}>{`${item.qnt}+`}</div>\r\n            <div>{`${item.unitPrice.toFixed(2)} р`}</div>\r\n          </div>\r\n        ))}\r\n      </td>\r\n\r\n      <td className={css.control}>\r\n        <InputNumber\r\n          size='sm'\r\n          step={minOrder}\r\n          value={state.orderQnt}\r\n          onChange={onChangeHandler}\r\n          onBlur={onBlurHandler} />\r\n      </td>\r\n\r\n      <td>{state.unitPrice} p</td>\r\n      <td>{state.totalPrice} p</td>\r\n\r\n      <td>\r\n        <IconButton onClick={() => onDeleteFromCart(comp)} size='sm' color=\"red\" icon={<Icon icon=\"close\" />} />\r\n      </td>\r\n\r\n    </tr>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onRefreshCart: comp => dispatch(refreshCart(comp)),\r\n    onDeleteFromCart: comp => dispatch(deleteFromCart(comp)),\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Product);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Product from '../Product/Product';\r\n\r\nconst Cart = ({ cart }) => {\r\n\r\n  const total = cart.reduce((acc, val) => acc + val.totalPrice, 0);\r\n\r\n  return (\r\n    <table>\r\n\r\n      <thead>\r\n        <tr>\r\n          <th>PartNumber</th>\r\n          <th>Инфо</th>\r\n          <th style={{ \"width\": \"100px\" }}>Цена</th>\r\n          <th style={{ \"width\": \"85px\" }}>Заказ</th>\r\n          <th style={{ \"width\": \"100px\" }}>Unit price</th>\r\n          <th style={{ \"width\": \"100px\" }}>Сумма</th>\r\n          <th style={{ \"width\": \"105px\" }}></th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n\r\n        {cart.map(item => <Product key={item.id} comp={item} />)}\r\n\r\n        <tr>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td>Итого</td>\r\n          <td>{total} руб</td>\r\n          <td></td>\r\n        </tr>\r\n\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cart: state.cart,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Cart);\r\n","import React from 'react';\r\nimport Layout from '../../layout/template/layout';\r\nimport Sidebar from '../../layout/sidebar/sidebar';\r\nimport Content from '../../layout/content/content';\r\nimport Cart from '../../components/Cart/Cart';\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <Sidebar side=\"left\"></Sidebar>\r\n    <Content>\r\n      <Cart />\r\n    </Content>\r\n  </Layout>\r\n)"],"sourceRoot":""}