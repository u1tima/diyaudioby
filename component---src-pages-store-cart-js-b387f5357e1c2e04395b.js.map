{"version":3,"sources":["webpack:///./src/components/Product/Product.js","webpack:///./src/components/Cart/Cart.js","webpack:///./src/pages/store/cart.js"],"names":["connect","dispatch","onRefreshCart","comp","refreshCart","onRemoveFromCart","removeFromCart","minOrder","sellPrice","partNumber","manufacture","initialState","orderQnt","unitPrice","totalPrice","inCart","useState","state","setState","data","onQntClick","index","qnt","step","value","onChange","getPrice","onBlur","event","target","Math","ceil","price","total","onRemove","cart","reduce","acc","val","style","map","item","key","id","side"],"mappings":"2NA2FeA,cAAQ,MAPI,SAAAC,GACzB,MAAO,CACLC,cAAe,SAAAC,GAAI,OAAIF,EAASG,YAAYD,KAC5CE,iBAAkB,SAAAF,GAAI,OAAIF,EAASK,YAAeH,QAIvCH,EA7EC,SAAC,GAA+C,IAA7CG,EAA4C,EAA5CA,KAAME,EAAsC,EAAtCA,iBAAkBH,EAAoB,EAApBA,cAEjCK,EAAiDJ,EAAjDI,SAAUC,EAAuCL,EAAvCK,UAAWC,EAA4BN,EAA5BM,WAAYC,EAAgBP,EAAhBO,YAGnCC,EAAe,CACnBC,SAH0CT,EAApCS,SAINC,UAJ0CV,EAA1BU,UAKhBC,WAL0CX,EAAfW,WAM3BC,QAAQ,GATmD,EAYnCC,mBAASL,GAA5BM,EAZsD,KAY/CC,EAZ+C,KAuC7D,OAEE,4BAEE,kBAAC,IAAD,CACET,WAAYA,EACZC,YAAaA,IAGf,kBAAC,IAAD,MAEA,kBAAC,IAAD,CACES,KAAMX,EACNY,WAtCa,SAAAC,GACjB,IAAMT,EAAWJ,EAAUa,GAAOC,IAC5BT,EAAYL,EAAUa,GAAOR,UAC7BC,EAAaF,EAAWC,EAC9BK,GAAS,SAAAD,GAAK,wBAAUA,EAAV,CAAiBL,WAAUC,YAAWC,kBACpDZ,EAAc,OAAD,UAAMC,EAAN,CAAYS,WAAUC,YAAWC,mBAoC5C,kBAAC,IAAD,CACES,KAAMhB,EACNiB,MAAOP,EAAML,SACba,SApCkB,SAAAD,GACtB,IAAMZ,GAAaY,GAAS,EAAK,GAAKA,EAChCX,EAAYa,YAASd,EAAUJ,GAC/BM,EAAaF,EAAWC,EAC9BK,GAAS,SAAAD,GAAK,wBAAUA,EAAV,CAAiBL,WAAUC,YAAWC,kBACpDZ,EAAc,OAAD,UAAMC,EAAN,CAAYS,WAAUC,YAAWC,iBAgC1Ca,OA7BgB,SAAAC,GACpB,IAAMJ,GAASI,EAAMC,OAAOL,MACtBZ,EAAWkB,KAAKC,KAAKP,EAAQjB,GAAYA,EACzCM,EAAYa,YAASd,EAAUJ,GAC/BM,EAAaF,EAAWC,EAC9BK,GAAS,SAAAD,GAAK,wBAAUA,EAAV,CAAiBL,WAAUC,YAAWC,kBACpDZ,EAAc,OAAD,UAAMC,EAAN,CAAYS,WAAUC,YAAWC,mBA0B5C,kBAAC,IAAD,CAAWkB,MAAOf,EAAMJ,YACxB,kBAAC,IAAD,CAAYoB,MAAOhB,EAAMH,aACzB,kBAAC,IAAD,CAAsBoB,SAAU,kBAAM7B,EAAiBF,UC9B9CH,eANS,SAAAiB,GACtB,MAAO,CACLkB,KAAMlB,EAAMkB,QAIDnC,EA5CF,SAAC,GAAc,IAAZmC,EAAW,EAAXA,KAERF,EAAQE,EAAKC,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,EAAIxB,aAAY,GAE9D,OACE,+BAEE,+BACE,4BACE,0CACA,oCACA,wBAAIyB,MAAO,CAAE,MAAS,UAAtB,QACA,wBAAIA,MAAO,CAAE,MAAS,SAAtB,SACA,wBAAIA,MAAO,CAAE,MAAS,UAAtB,cACA,wBAAIA,MAAO,CAAE,MAAS,UAAtB,SACA,wBAAIA,MAAO,CAAE,MAAS,aAI1B,+BAEGJ,EAAKK,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAASC,IAAKD,EAAKE,GAAIxC,KAAMsC,OAE/C,4BACE,6BACA,6BACA,6BACA,6BACA,qCACA,4BAAKR,EAAL,QACA,mCC5BK,4BACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASW,KAAK,SACd,kBAAC,IAAD,KACE,kBAAC,EAAD","file":"component---src-pages-store-cart-js-b387f5357e1c2e04395b.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  PartNumber,\r\n  Info,\r\n  PriceData,\r\n  OrderInput,\r\n  UnitPrice,\r\n  TotalPrice,\r\n  ButtonRemoveFromCart,\r\n} from '../State/StateView';\r\nimport { getPrice } from '../State/StateActions';\r\nimport { refreshCart, removeFromCart } from '../../store/cart/actions';\r\n\r\nconst Product = ({ comp, onRemoveFromCart, onRefreshCart }) => {\r\n\r\n  const { minOrder, sellPrice, partNumber, manufacture } = comp;\r\n  const { orderQnt, unitPrice, totalPrice } = comp;\r\n\r\n  const initialState = {\r\n    orderQnt,\r\n    unitPrice,\r\n    totalPrice,\r\n    inCart: true,\r\n  }\r\n\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const onQntClick = index => {\r\n    const orderQnt = sellPrice[index].qnt;\r\n    const unitPrice = sellPrice[index].unitPrice;\r\n    const totalPrice = orderQnt * unitPrice;\r\n    setState(state => ({ ...state, orderQnt, unitPrice, totalPrice }))\r\n    onRefreshCart({ ...comp, orderQnt, unitPrice, totalPrice });\r\n  }\r\n\r\n  const onChangeHandler = value => {\r\n    const orderQnt = (+value <= 0) ? 0 : +value\r\n    const unitPrice = getPrice(orderQnt, sellPrice);\r\n    const totalPrice = orderQnt * unitPrice;\r\n    setState(state => ({ ...state, orderQnt, unitPrice, totalPrice }));\r\n    onRefreshCart({ ...comp, orderQnt, unitPrice, totalPrice });\r\n  }\r\n\r\n  const onBlurHandler = event => {\r\n    const value = +event.target.value;\r\n    const orderQnt = Math.ceil(value / minOrder) * minOrder;\r\n    const unitPrice = getPrice(orderQnt, sellPrice);\r\n    const totalPrice = orderQnt * unitPrice;\r\n    setState(state => ({ ...state, orderQnt, unitPrice, totalPrice }));\r\n    onRefreshCart({ ...comp, orderQnt, unitPrice, totalPrice });\r\n  }\r\n\r\n  return (\r\n\r\n    <tr>\r\n\r\n      <PartNumber\r\n        partNumber={partNumber}\r\n        manufacture={manufacture}\r\n      />\r\n\r\n      <Info />\r\n\r\n      <PriceData\r\n        data={sellPrice}\r\n        onQntClick={onQntClick}\r\n      />\r\n\r\n      <OrderInput\r\n        step={minOrder}\r\n        value={state.orderQnt}\r\n        onChange={onChangeHandler}\r\n        onBlur={onBlurHandler}\r\n      />\r\n\r\n      <UnitPrice price={state.unitPrice} />\r\n      <TotalPrice total={state.totalPrice} />\r\n      <ButtonRemoveFromCart onRemove={() => onRemoveFromCart(comp)} />\r\n\r\n    </tr>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onRefreshCart: comp => dispatch(refreshCart(comp)),\r\n    onRemoveFromCart: comp => dispatch(removeFromCart(comp)),\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Product);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Product from '../Product/Product';\r\n\r\nconst Cart = ({ cart }) => {\r\n\r\n  const total = cart.reduce((acc, val) => acc + val.totalPrice, 0);\r\n\r\n  return (\r\n    <table>\r\n\r\n      <thead>\r\n        <tr>\r\n          <th>PartNumber</th>\r\n          <th>Инфо</th>\r\n          <th style={{ \"width\": \"100px\" }}>Цена</th>\r\n          <th style={{ \"width\": \"85px\" }}>Заказ</th>\r\n          <th style={{ \"width\": \"100px\" }}>Unit price</th>\r\n          <th style={{ \"width\": \"100px\" }}>Сумма</th>\r\n          <th style={{ \"width\": \"105px\" }}></th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n\r\n        {cart.map(item => <Product key={item.id} comp={item} />)}\r\n\r\n        <tr>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td>Итого</td>\r\n          <td>{total} руб</td>\r\n          <td></td>\r\n        </tr>\r\n\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cart: state.cart,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Cart);\r\n","import React from 'react';\r\nimport Layout from '../../layout/template/layout';\r\nimport Sidebar from '../../layout/sidebar/sidebar';\r\nimport Content from '../../layout/content/content';\r\nimport Cart from '../../components/Cart/Cart';\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <Sidebar side=\"left\"></Sidebar>\r\n    <Content>\r\n      <Cart />\r\n    </Content>\r\n  </Layout>\r\n)"],"sourceRoot":""}