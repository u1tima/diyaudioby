{"version":3,"sources":["webpack:///./src/components/Product/Product.module.css","webpack:///./src/components/Product/Product.js","webpack:///./src/components/Cart/Cart.js","webpack:///./src/pages/store/cart.js"],"names":["module","exports","connect","dispatch","onDeleteFromCart","comp","deleteFromCart","minOrder","sellPrice","initialState","orderQnt","unitPrice","totalPrice","useState","state","setState","getPrice","forEach","item","qnt","partNumber","manufacture","name","Icon","icon","size","className","css","price","map","index","key","row","onClick","qntClick","toFixed","control","InputNumber","step","value","onChange","onBlur","event","target","Math","ceil","IconButton","color","cart","style","id","side"],"mappings":"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","file":"component---src-pages-store-cart-js-534043d620ae47a1d054.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"price\":\"Product-module--price--3ntmT\",\"row\":\"Product-module--row--XriqV\",\"asmQnt\":\"Product-module--asmQnt--2a0j-\",\"item\":\"Product-module--item--3BGKZ\",\"control\":\"Product-module--control--KPap4\",\"buttons\":\"Product-module--buttons--2zPbr\"};","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Icon, IconButton, InputNumber } from 'rsuite';\r\nimport { deleteFromCart } from '../../store/cart/actions';\r\nimport css from './Product.module.css';\r\n\r\nconst Product = ({ comp, onDeleteFromCart }) => {\r\n\r\n  const { minOrder, sellPrice, orderQnt, unitPrice, totalPrice } = comp;\r\n\r\n  const initialState = {\r\n    orderQnt,\r\n    unitPrice,\r\n    totalPrice,\r\n  }\r\n\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const getPrice = (orderQnt) => {\r\n    if (orderQnt <= 0) return 0;\r\n    let unitPrice = sellPrice[0].unitPrice;\r\n    sellPrice.forEach(item => {\r\n      if (orderQnt >= item.qnt) unitPrice = item.unitPrice;\r\n    });\r\n    return unitPrice;\r\n  }\r\n\r\n  const qntClick = (index) => {\r\n    const orderQnt = sellPrice[index].qnt;\r\n    const unitPrice = sellPrice[index].unitPrice;\r\n    const totalPrice = orderQnt * unitPrice;\r\n    setState(state => ({ ...state, orderQnt, unitPrice, totalPrice }))\r\n  }\r\n\r\n  const onChangeHandler = (value) => {\r\n    const orderQnt = (+value <= 0) ? 0 : +value\r\n    const unitPrice = getPrice(orderQnt);\r\n    const totalPrice = orderQnt * unitPrice;\r\n    setState(state => ({ ...state, orderQnt, unitPrice, totalPrice }));\r\n  }\r\n\r\n  const onBlurHandler = (event) => {\r\n    const value = +event.target.value;\r\n    const orderQnt = Math.ceil(value / minOrder) * minOrder;\r\n    const unitPrice = getPrice(orderQnt);\r\n    const totalPrice = orderQnt * unitPrice;\r\n    setState(state => ({ ...state, orderQnt, unitPrice, totalPrice }));\r\n  }\r\n\r\n  return (\r\n\r\n    <tr>\r\n\r\n      <td>\r\n        <div>{comp.partNumber}</div>\r\n        <div>{comp.manufacture.name}</div>\r\n      </td>\r\n\r\n      <td>\r\n        <Icon icon=\"cog\" size=\"lg\" />\r\n      </td>\r\n\r\n      <td className={css.price}>\r\n        {sellPrice.map((item, index) => (\r\n          <div key={index} className={css.row}>\r\n            <div className={css.item} onClick={() => qntClick(index)}>{`${item.qnt}+`}</div>\r\n            <div>{`${item.unitPrice.toFixed(2)} р`}</div>\r\n          </div>\r\n        ))}\r\n      </td>\r\n\r\n      <td className={css.control}>\r\n        <InputNumber\r\n          size='sm'\r\n          step={minOrder}\r\n          value={state.orderQnt}\r\n          onChange={onChangeHandler}\r\n          onBlur={onBlurHandler} />\r\n      </td>\r\n\r\n      <td>\r\n        {state.unitPrice} p\r\n      </td>\r\n\r\n      <td>\r\n        {state.totalPrice} p\r\n      </td>\r\n\r\n      <td>\r\n        <IconButton onClick={() => onDeleteFromCart(comp)} size='sm' color=\"red\" icon={<Icon icon=\"close\" />} />\r\n      </td>\r\n\r\n    </tr>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteFromCart: comp => dispatch(deleteFromCart(comp)),\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Product);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Product from '../Product/Product';\r\n\r\nconst Cart = ({ cart }) => {\r\n\r\n  return (\r\n    <table>\r\n\r\n      <thead>\r\n        <tr>\r\n          <th>PartNumber</th>\r\n          <th>Инфо</th>\r\n          <th style={{ \"width\": \"100px\" }}>Цена</th>\r\n          <th style={{ \"width\": \"85px\" }}>Заказ</th>\r\n          <th style={{ \"width\": \"100px\" }}>Unit price</th>\r\n          <th style={{ \"width\": \"100px\" }}>Сумма</th>\r\n          <th style={{ \"width\": \"105px\" }}></th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n\r\n        {cart.map(item => <Product key={item.id} comp={item} />)}\r\n\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cart: state.cart,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Cart);\r\n","import React from 'react';\r\nimport Layout from '../../layout/template/layout';\r\nimport Sidebar from '../../layout/sidebar/sidebar';\r\nimport Content from '../../layout/content/content';\r\nimport Cart from '../../components/Cart/Cart';\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <Sidebar side=\"left\"></Sidebar>\r\n    <Content>\r\n      <Cart />\r\n    </Content>\r\n  </Layout>\r\n)"],"sourceRoot":""}